

---- Testing Collisions ----

---- Testing ptInRect ----
  center:
  pt = (-3,3,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  corners:
  pt = (-4,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-4,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  middle of rectangle quadrants:
  pt = (-2.5,2.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2.5,3.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-3.5,2.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-3.5,3.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  along sides:
  pt = (-2,2.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2.5,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2,3.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-2.5,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-4,2.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-3.5,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-4,3.5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
  pt = (-3.5,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = COLLISION: PASSED
 around upper left:
  pt = (-4,5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-5,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-5,5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  around upper right:
  pt = (-1,4,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-2,5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-1,5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  around lower left:
  pt = (-5,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-4,1,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-5,1,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  around lower right:
  pt = (-1,2,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-2,1,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-1,1,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  directly out from sides:
  pt = (-5,3,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-3,5,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-1,3,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED
  pt = (-3,1,0),
    r:center = (-3,3,0), r:width = 1, r:height = 1
    ptInRect() = OUTSIDE: PASSED

---- Testing threeHalfSpace ----
  centroid:
  pt = (2,-2.33333,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  corners:
  pt = (2,-1,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (1,-3,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (3,-3,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  midpoints along sides:
  pt = (2,-3,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (2.5,-2,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (1.5,-2,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  halfway from midpoint to center:
  pt = (2,-2.66667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (2.25,-2.16667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  pt = (1.75,-2.16667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = COLLISION: PASSED
  directly out from corner:
  pt = (2,-0.666667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED
  pt = (0.75,-3.16667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED
  pt = (3.25,-3.16667,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED
  directly out from sides:
  pt = (2,-3.33333,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED
  pt = (2.75,-1.83333,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED
  pt = (1.25,-1.83333,0),
    t:corners[0] = (2,-1,0), t:corners[1] = (1,-3,0), t:corners[2] = (3,-3,0)
    threeHalfSpace() = OUTSIDE: PASSED

---- PASSED Collisions Test ----


---- Testing VecFxns ----

---- Testing vecDotProduct ----
  pt1 = (0,0,0), pt2 = (0,0,0)
    pt1 . pt2 = 0: PASSED
  pt1 = (2,3,0), pt2 = (-2,-3,0)
    pt1 . pt2 = -13: PASSED
  pt1 = (4,-3,0), pt2 = (6,5,0)
    pt1 . pt2 = 9: PASSED

---- Testing vecSub(To,From,Result) ----
  pt1 = (0,0,0), pt2 = (-3,4,0)
    pt1 - pt2 = (3,-4,0): PASSED
  pt1 = (6,7,0), pt2 = (-3,4,0)
    pt1 - pt2 = (9,3,0): PASSED

---- Testing vecLength ----
  pt = (0,0,0), length = 0: PASSED
  pt = (3,4,0), length = 5: PASSED
  pt = (-2,0,0), length = 2: PASSED
  pt = (0,5,0), length = 5: PASSED
  pt = (-5,3,0), length = 5.83095: PASSED

---- Testing vecDist(pt1,pt2) ----
  pt1 = (1,2,0), pt2 = (1,2,0)
    vecDist(pt1,pt2) = 0: PASSED
  pt1 = (0,0,0), pt2 = (3,4,0)
    vecDist(pt1,pt2) = 5: PASSED
  pt1 = (2,4,0), pt2 = (3,-5,0)
    vecDist(pt1,pt2) = 9.05539: PASSED
  pt1 = (-8,-2,0), pt2 = (-4,4,0)
    vecDist(pt1,pt2) = 7.2111: PASSED

---- Testing vecNormalize ----
  pt = (0,0,0), normalized = (0,0,0): PASSED
  pt = (2,0,0), normalized = (1,0,0): PASSED
  pt = (0,-3,0), normalized = (0,-1,0): PASSED
  pt = (5,-6,0), normalized = (0.640184,-0.768221,0): PASSED
  pt = (1,2,0), normalized = (0.447214,0.894427,0): PASSED
  pt = (-3,4,0), normalized = (-0.6,0.8,0): PASSED
  pt = (-2,-4,0), normalized = (-0.447214,-0.894427,0): PASSED

---- Testing vecPerpendicular(source,dest) ----
  pt = (0,0,0), perpendicular = (-0,0,0): PASSED
  pt = (-3,4,0), perpendicular = (-4,-3,0): PASSED
  pt = (2,0,0), perpendicular = (-0,2,0): PASSED
  pt = (0,5,0), perpendicular = (-5,0,0): PASSED
  pt = (2,-7,0), perpendicular = (7,2,0): PASSED
  pt = (-5,-3,0), perpendicular = (3,-5,0): PASSED
  pt = (1,6,0), perpendicular = (-6,1,0): PASSED

---- Testing GetHighestX ----
  pt1 = (1,2,0), pt2 = (1,2,0), pt3 = (1,2,0)
    highest x value = 1: PASSED
  pt1 = (-1,2,0), pt2 = (-2,3,0), pt3 = (-3,4,0)
    highest x value = -1: PASSED
  pt1 = (1.2,0,0), pt2 = (1.1,-1,0), pt3 = (1,-1.1,0)
    highest x value = 1.2: PASSED
  pt1 = (2,1,0), pt2 = (5.1,3.3,0), pt3 = (-1,-2.1,0)
    highest x value = 5.1: PASSED
  pt1 = (0,0,0), pt2 = (-1.2,-2.1,0), pt3 = (3.2,4.1,0)
    highest x value = 3.2: PASSED

---- Testing GetLowestX ----
  pt1 = (1,2,0), pt2 = (1,2,0), pt3 = (1,2,0)
    lowest x value = 1: PASSED
  pt1 = (-1,2,0), pt2 = (-2,3,0), pt3 = (-3,4,0)
    lowest x value = -3: PASSED
  pt1 = (1.2,0,0), pt2 = (1.1,-1,0), pt3 = (1,-1.1,0)
    lowest x value = 1: PASSED
  pt1 = (2,1,0), pt2 = (5.1,3.3,0), pt3 = (-1,-2.1,0)
    lowest x value = -1: PASSED
  pt1 = (0,0,0), pt2 = (-1.2,-2.1,0), pt3 = (3.2,4.1,0)
    lowest x value = -1.2: PASSED

---- Testing GetHighestY ----
  pt1 = (1,2,0), pt2 = (1,2,0), pt3 = (1,2,0)
    highest y value = 2: PASSED
  pt1 = (-1,2,0), pt2 = (-2,3,0), pt3 = (-3,4,0)
    highest y value = 4: PASSED
  pt1 = (1.2,0,0), pt2 = (1.1,-1,0), pt3 = (1,-1.1,0)
    highest y value = 0: PASSED
  pt1 = (2,1,0), pt2 = (5.1,3.3,0), pt3 = (-1,-2.1,0)
    highest y value = 3.3: PASSED
  pt1 = (0,0,0), pt2 = (-1.2,-2.1,0), pt3 = (3.2,4.1,0)
    highest y value = 4.1: PASSED

---- Testing GetLowestY ----
  pt1 = (1,2,0), pt2 = (1,2,0), pt3 = (1,2,0)
    lowest y value = 2: PASSED
  pt1 = (-1,2,0), pt2 = (-2,3,0), pt3 = (-3,4,0)
    lowest y value = 2: PASSED
  pt1 = (1.2,0,0), pt2 = (1.1,-1,0), pt3 = (1,-1.1,0)
    lowest y value = -1.1: PASSED
  pt1 = (2,1,0), pt2 = (5.1,3.3,0), pt3 = (-1,-2.1,0)
    lowest y value = -2.1: PASSED
  pt1 = (0,0,0), pt2 = (-1.2,-2.1,0), pt3 = (3.2,4.1,0)
    lowest y value = -2.1: PASSED

---- PASSED vecFxns Test ----


---- Testing Class: Basic Enemy ----
  Declaring: testEnemy(200, 300, 100, 250)
  Results:
CLASS REPORT: GameObject
  Shape body:
    ShapeType type = RECTANGLE
    Vec center = (200,300,0)
    Vec corners[3] =(0,0,-5.72797e+27)(4.59149e-41,5.88761e-39,0)(-5.72815e+27,4.59149e-41,0)
    float width = 10
    float height = 20
    float radius = 3.62662e-33
  ObjectType id = ENEMY
  int rgb[3] = 150, 100, 100
  float gravity = -0.25
  ----  SUBCLASS REPORT: BasicEnemy
    Vec prevPosition = (200,300,0)
    Vec velocity = (0.5,0,0)
    int facing = 1
    int leftBoundary = 100
    int rightBoundary = 250



----- ----- ----- ----- -----
           RESULTS           
  ALL TESTS PASSED!
----- ----- ----- ----- -----
